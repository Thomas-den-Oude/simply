@use '@angular/material' as mat;

@use 'global';

@mixin task-group-theme($theme) {
	@include task-group-base;
	@include task-group-color($theme);
	@include task-group-density($theme);
}

@mixin task-group-base {
	button.simply-task-group {
		&__tab {
			display: flex;
			justify-content: center;
			align-items: center;
			gap: global.space('regular');
			width: 100%;
			min-height: global.space('extra-large');
			border: none;
			background-color: transparent;
			padding: global.space('regular');
			transition:
				color 300ms,
				border-bottom-width 400ms 100ms;

			&__active-tab {
				border-bottom-width: 2px;
				border-bottom-style: solid;
			}
		}
	}
	.simply-task-group {
		&__list {
			height: 100%;
			display: flex;
			flex-direction: column;
		}
		&__list-hidden {
			display: none;
		}
	}
	&__add-button {
		position: fixed;
		z-index: 2;
	}
}

@mixin task-group-color($theme) {
	$text: mat.get-theme-color($theme, foreground, text);
	$primary: mat.get-theme-color($theme, primary);

	.simply-task-group {
		&__container {
			border-color: $text;
		}
	}

	button.simply-task-group {
		&__tab {
			color: $text;
			&:hover {
				color: $primary;
			}
		}
		&__active-tab {
			color: $primary;
		}
	}
}

@mixin task-group-density($theme) {
	$density: mat.get-theme-density($theme);

	@if $density < 0 {
		.simply-task-group {
			&__list {
				padding: global.space('small');
				gap: global.space('regular');
			}
			&__add-button {
				bottom: global.space('large');
				right: global.space('large');
			}
		}
	} @else {
		.simply-task-group {
			&__list {
				padding: global.space('regular');
				gap: global.space('regular');
			}
			&__add-button {
				bottom: global.space('extra-large');
				right: global.space('extra-large');
			}
		}
	}
}
